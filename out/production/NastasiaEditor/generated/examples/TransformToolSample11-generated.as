
/**
 *  Generated by mxmlc 4.0
 *
 *  Package:    examples
 *  Class:      TransformToolSample11
 *  Source:     D:\a.krasovsky\Dropbox\projects\my\site\NastasiaEditor\src\examples\TransformToolSample11.mxml
 *  Template:   flex2/compiler/mxml/gen/ClassDef.vm
 *  Time:       2014.01.15 01:56:41 AST
 */

package examples
{

import com.vstyran.transform.events.GuidelineEvent;
import com.vstyran.transform.model.Bounds;
import examples.components.GuideContainer;
import examples.skins.CustomUITransformToolSkin;
import examples.view.CustomUITransformTool;
import flash.accessibility.*;
import flash.debugger.*;
import flash.display.*;
import flash.errors.*;
import flash.events.*;
import flash.events.Event;
import flash.events.MouseEvent;
import flash.external.*;
import flash.geom.*;
import flash.media.*;
import flash.net.*;
import flash.printing.*;
import flash.profiler.*;
import flash.system.*;
import flash.text.*;
import flash.ui.*;
import flash.utils.*;
import flash.xml.*;
import mx.binding.*;
import mx.binding.IBindingClient;
import mx.collections.ArrayCollection;
import mx.core.ClassFactory;
import mx.core.DeferredInstanceFromClass;
import mx.core.DeferredInstanceFromFunction;
import mx.core.IDeferredInstance;
import mx.core.IFactory;
import mx.core.IFlexModuleFactory;
import mx.core.IPropertyChangeNotifier;
import mx.core.mx_internal;
import mx.events.FlexEvent;
import mx.filters.*;
import mx.graphics.SolidColor;
import mx.graphics.SolidColorStroke;
import mx.styles.*;
import spark.components.Application;
import spark.components.Group;
import spark.components.Image;
import spark.primitives.Rect;


[SWF( height='300', width='460')]
[Frame(extraClass="_TransformToolSample11_FlexInit")]

[Frame(factoryClass="_TransformToolSample11_mx_managers_SystemManager")]


//  begin class def
public class TransformToolSample11
    extends spark.components.Application
    implements mx.binding.IBindingClient
{

    //  instance variables
    [Bindable]
	/**
 * @private
 **/
    public var border : spark.primitives.Rect;

    [Bindable]
	/**
 * @private
 **/
    public var designArea : spark.components.Group;

    [Bindable]
	/**
 * @private
 **/
    public var guideContainer : examples.components.GuideContainer;

    [Bindable]
	/**
 * @private
 **/
    public var imageGroup : spark.components.Group;

    [Bindable]
	/**
 * @private
 **/
    public var imageTarget1 : spark.components.Image;

    [Bindable]
	/**
 * @private
 **/
    public var imageTarget2 : spark.components.Image;

    [Bindable]
	/**
 * @private
 **/
    public var imageTarget3 : spark.components.Image;

    [Bindable]
	/**
 * @private
 **/
    public var itemsCollection : mx.collections.ArrayCollection;

    [Bindable]
	/**
 * @private
 **/
    public var tool : examples.view.CustomUITransformTool;


    //  type-import dummies



    //  constructor (Flex display object)
    /**
     * @private
     **/
    public function TransformToolSample11()
    {
        super();

        mx_internal::_document = this;


        var bindings:Array = _TransformToolSample11_bindingsSetup();
        var watchers:Array = [];

        var target:Object = this;

        if (_watcherSetupUtil == null)
        {
            var watcherSetupUtilClass:Object = getDefinitionByName("_examples_TransformToolSample11WatcherSetupUtil");
            watcherSetupUtilClass["init"](null);
        }

        _watcherSetupUtil.setup(this,
                    function(propertyName:String):* { return target[propertyName]; },
                    function(propertyName:String):* { return TransformToolSample11[propertyName]; },
                    bindings,
                    watchers);

        mx_internal::_bindings = mx_internal::_bindings.concat(bindings);
        mx_internal::_watchers = mx_internal::_watchers.concat(watchers);


        // layer initializers

       
        // properties
        this.width = 460;
        this.height = 300;
        this.viewSourceURL = "http://vstyran-flex.ho.ua/TransformTool2/examples/TransformToolSample11/srcview/index.html";
        this.mxmlContentFactory = new mx.core.DeferredInstanceFromFunction(_TransformToolSample11_Array2_c);
        _TransformToolSample11_ArrayCollection1_i();


        // events
        this.addEventListener("creationComplete", ___TransformToolSample11_Application1_creationComplete);










        for (var i:uint = 0; i < bindings.length; i++)
        {
            Binding(bindings[i]).execute();
        }


    }

    /**
     * @private
     **/ 
    private var __moduleFactoryInitialized:Boolean = false;

    /**
     * @private
     * Override the module factory so we can defer setting style declarations
     * until a module factory is set. Without the correct module factory set
     * the style declaration will end up in the wrong style manager.
     **/ 
    override public function set moduleFactory(factory:IFlexModuleFactory):void
    {
        super.moduleFactory = factory;
        
        if (__moduleFactoryInitialized)
            return;

        __moduleFactoryInitialized = true;


        // our style settings


        // ambient styles
        mx_internal::_TransformToolSample11_StylesInit();

                         
    }
 
    //  initialize()
    /**
     * @private
     **/
    override public function initialize():void
    {


        super.initialize();
    }


    //  scripts
    //  <Script>, line 11 - 118

        import com.vstyran.transform.consts.GuidelineType;
        import com.vstyran.transform.consts.TransformationType;
        import com.vstyran.transform.events.GuidelineEvent;
        import com.vstyran.transform.model.Guideline;
        import com.vstyran.transform.utils.DataUtil;

        import examples.components.*;

        import mx.collections.ArrayCollection;
        import mx.core.IVisualElement;
        import mx.events.FlexEvent;

        import spark.components.Group;

        [Bindable]
        private var deletedObjects:ArrayCollection = new ArrayCollection();

        protected function designArea_clickHandler(event:MouseEvent):void {
            if (event.target == designArea) {
                deselect();
            }
        }

        protected function tool_deleteTargetHandler(event:Event):void {
            deletedObjects.addItem(tool.target);
            designArea.removeElement(tool.target);
            deselect();

        }

        private function deselect():void {
            tool.targets = null;
            tool.visible = false;
            tool.includeInLayout = false;
        }

        private function select(event:MouseEvent):void {
            tool.targets = [event.currentTarget];
            tool.visible = true;
            tool.includeInLayout = true;
            updateGuides();
            tool.startMoving(event);

        }

        protected function button1_clickHandler(event:MouseEvent):void {
            for each (var image:Image in deletedObjects) {
                designArea.addElement(image);
            }

            deletedObjects.removeAll();
        }

        protected function updateGuides():void {
            var guidelines:Vector.<Guideline> = createGuidelines(imageGroup);
            tool.guidelines = guidelines;
        }


        private function creationCompleteHandler(event:FlexEvent):void {
            addImages();
            updateGuides();
        }

        private function addImages():void {
            for each (var image:Image in itemsCollection) {

                imageGroup.addElement(image);
                image.addEventListener(MouseEvent.MOUSE_DOWN, image_mouseDownHandler);
            }
        }

        private function createGuidelines(imageGroup:Group):Vector.<Guideline> {
            var guidelines:Vector.<Guideline> = new Vector.<Guideline>();
            for (var i:int = 0; i < imageGroup.numElements; i++) {
                var element:IVisualElement = imageGroup.getElementAt(i);

                if (element is Image && tool.target != element) {

                    var box:Rectangle = DataUtil.createData(element as Image).getBoundingBox();

                    guidelines.push(new Guideline(GuidelineType.VERTICAL_EDGE, box.x, 3));
                    guidelines.push(new Guideline(GuidelineType.VERTICAL_CENTER, box.x + box.width / 2, 3));
                    guidelines.push(new Guideline(GuidelineType.VERTICAL_EDGE, box.x + box.width, 3));

                    guidelines.push(new Guideline(GuidelineType.HORIZONTAL_EDGE, box.y, 3));
                    guidelines.push(new Guideline(GuidelineType.HORIZONTAL_CENTER, box.y + box.height / 2, 3));
                    guidelines.push(new Guideline(GuidelineType.HORIZONTAL_EDGE, box.y + box.height, 3));

                    if ((element as Image).rotation % 90 != 0) {
                        var guideLine:Guideline = new Guideline(GuidelineType.ROTATION, (element as Image).rotation, 3);
                        guideLine.userData = element;
                        guidelines.push(guideLine);
                    }
                }
            }
            return guidelines;
        }

        private function tool_guidelinesUpdateHandler(event:GuidelineEvent):void {
            guideContainer.updateGuideLines(event);
        }

        private function image_mouseDownHandler(event:MouseEvent):void {
            select(event);
        }
        

    //  end scripts


    //  supporting function definitions for properties, events, styles, effects
private function _TransformToolSample11_ArrayCollection1_i() : mx.collections.ArrayCollection
{
	var temp : mx.collections.ArrayCollection = new mx.collections.ArrayCollection();
	temp.source = [_TransformToolSample11_Image1_i(), _TransformToolSample11_Image2_i(), _TransformToolSample11_Image3_i()];
	temp.initialized(this, "itemsCollection")
	itemsCollection = temp;
	mx.binding.BindingManager.executeBindings(this, "itemsCollection", itemsCollection);
	return temp;
}

private function _TransformToolSample11_Image1_i() : spark.components.Image
{
	var temp : spark.components.Image = new spark.components.Image();
	temp.x = 182;
	temp.y = 171;
	temp.width = 78;
	temp.height = 92;
	temp.rotation = 0;
	temp.scaleMode = "letterbox";
	temp.smooth = true;
	temp.source = _embed_mxml_image1_png_1600662270;
	temp.minHeight = 20;
	temp.minWidth = 20;
	temp.id = "imageTarget1";
	if (!temp.document) temp.document = this;
	imageTarget1 = temp;
	mx.binding.BindingManager.executeBindings(this, "imageTarget1", imageTarget1);
	return temp;
}

private function _TransformToolSample11_Image2_i() : spark.components.Image
{
	var temp : spark.components.Image = new spark.components.Image();
	temp.x = 55;
	temp.y = 77;
	temp.width = 100;
	temp.height = 83;
	temp.rotation = 0;
	temp.scaleMode = "letterbox";
	temp.smooth = true;
	temp.source = _embed_mxml_image2_png_1599613436;
	temp.minHeight = 20;
	temp.minWidth = 20;
	temp.id = "imageTarget2";
	if (!temp.document) temp.document = this;
	imageTarget2 = temp;
	mx.binding.BindingManager.executeBindings(this, "imageTarget2", imageTarget2);
	return temp;
}

private function _TransformToolSample11_Image3_i() : spark.components.Image
{
	var temp : spark.components.Image = new spark.components.Image();
	temp.x = 323;
	temp.y = 89;
	temp.width = 71;
	temp.height = 71;
	temp.rotation = 0;
	temp.scaleMode = "letterbox";
	temp.smooth = true;
	temp.source = _embed_mxml_image3_png_1599624958;
	temp.minHeight = 20;
	temp.minWidth = 20;
	temp.id = "imageTarget3";
	if (!temp.document) temp.document = this;
	imageTarget3 = temp;
	mx.binding.BindingManager.executeBindings(this, "imageTarget3", imageTarget3);
	return temp;
}

private function _TransformToolSample11_Array2_c() : Array
{
	var temp : Array = [_TransformToolSample11_Group1_i(), _TransformToolSample11_GuideContainer1_i()];
	return temp;
}

private function _TransformToolSample11_Group1_i() : spark.components.Group
{
	var temp : spark.components.Group = new spark.components.Group();
	temp.width = 460;
	temp.height = 300;
	temp.verticalCenter = 0;
	temp.horizontalCenter = 0;
	temp.mxmlContent = [_TransformToolSample11_Rect1_c(), _TransformToolSample11_Rect2_i(), _TransformToolSample11_Group2_i(), _TransformToolSample11_CustomUITransformTool1_i()];
	temp.addEventListener("click", __designArea_click);
	temp.id = "designArea";
	if (!temp.document) temp.document = this;
	designArea = temp;
	mx.binding.BindingManager.executeBindings(this, "designArea", designArea);
	return temp;
}

private function _TransformToolSample11_Rect1_c() : spark.primitives.Rect
{
	var temp : spark.primitives.Rect = new spark.primitives.Rect();
	temp.top = 0;
	temp.right = 0;
	temp.left = 0;
	temp.bottom = 0;
	temp.fill = _TransformToolSample11_SolidColor1_c();
	temp.initialized(this, null)
	return temp;
}

private function _TransformToolSample11_SolidColor1_c() : mx.graphics.SolidColor
{
	var temp : mx.graphics.SolidColor = new mx.graphics.SolidColor();
	temp.color = 14540253;
	return temp;
}

private function _TransformToolSample11_Rect2_i() : spark.primitives.Rect
{
	var temp : spark.primitives.Rect = new spark.primitives.Rect();
	temp.top = 45;
	temp.right = 30;
	temp.left = 30;
	temp.bottom = 25;
	temp.stroke = _TransformToolSample11_SolidColorStroke1_c();
	temp.initialized(this, "border")
	border = temp;
	mx.binding.BindingManager.executeBindings(this, "border", border);
	return temp;
}

private function _TransformToolSample11_SolidColorStroke1_c() : mx.graphics.SolidColorStroke
{
	var temp : mx.graphics.SolidColorStroke = new mx.graphics.SolidColorStroke();
	temp.color = 11316396;
	return temp;
}

private function _TransformToolSample11_Group2_i() : spark.components.Group
{
	var temp : spark.components.Group = new spark.components.Group();
	temp.mouseEnabled = false;
	temp.id = "imageGroup";
	if (!temp.document) temp.document = this;
	imageGroup = temp;
	mx.binding.BindingManager.executeBindings(this, "imageGroup", imageGroup);
	return temp;
}

private function _TransformToolSample11_CustomUITransformTool1_i() : examples.view.CustomUITransformTool
{
	var temp : examples.view.CustomUITransformTool = new examples.view.CustomUITransformTool();
	temp.depth = 3;
	temp.bounds = _TransformToolSample11_Bounds1_c();
	temp.setStyle("skinClass", examples.skins.CustomUITransformToolSkin);
	temp.addEventListener("deleteTarget", __tool_deleteTarget);
	temp.addEventListener("guidelinesUpdate", __tool_guidelinesUpdate);
	temp.id = "tool";
	if (!temp.document) temp.document = this;
	tool = temp;
	mx.binding.BindingManager.executeBindings(this, "tool", tool);
	return temp;
}

private function _TransformToolSample11_Bounds1_c() : com.vstyran.transform.model.Bounds
{
	var temp : com.vstyran.transform.model.Bounds = new com.vstyran.transform.model.Bounds();
	temp.x = 30;
	temp.y = 45;
	temp.width = 400;
	temp.height = 230;
	return temp;
}

/**
 * @private
 **/
public function __tool_deleteTarget(event:flash.events.Event):void
{
	tool_deleteTargetHandler(event)
}

/**
 * @private
 **/
public function __tool_guidelinesUpdate(event:com.vstyran.transform.events.GuidelineEvent):void
{
	tool_guidelinesUpdateHandler(event)
}

/**
 * @private
 **/
public function __designArea_click(event:flash.events.MouseEvent):void
{
	designArea_clickHandler(event)
}

private function _TransformToolSample11_GuideContainer1_i() : examples.components.GuideContainer
{
	var temp : examples.components.GuideContainer = new examples.components.GuideContainer();
	temp.width = 460;
	temp.height = 300;
	temp.verticalCenter = 0;
	temp.horizontalCenter = 0;
	temp.id = "guideContainer";
	if (!temp.document) temp.document = this;
	guideContainer = temp;
	mx.binding.BindingManager.executeBindings(this, "guideContainer", guideContainer);
	return temp;
}

/**
 * @private
 **/
public function ___TransformToolSample11_Application1_creationComplete(event:mx.events.FlexEvent):void
{
	creationCompleteHandler(event)
}


    //  binding mgmt
    private function _TransformToolSample11_bindingsSetup():Array
    {
        var result:Array = [];

        result[0] = new mx.binding.Binding(this,
            function():Array
            {
                var result:* = ([itemsCollection[0]]);
                return ((result == null) || (result is Array) || (result is flash.utils.Proxy) ? result : [result]);
            },
            null,
            "tool.targets"
            );


        return result;
    }


    /**
     * @private
     **/
    public static function set watcherSetupUtil(watcherSetupUtil:IWatcherSetupUtil2):void
    {
        (TransformToolSample11)._watcherSetupUtil = watcherSetupUtil;
    }

    private static var _watcherSetupUtil:IWatcherSetupUtil2;

    //  initialize style defs for TransformToolSample11

    mx_internal var _TransformToolSample11_StylesInit_done:Boolean = false;

    mx_internal function _TransformToolSample11_StylesInit():void
    {
        //  only add our style defs to the style manager once
        if (mx_internal::_TransformToolSample11_StylesInit_done)
            return;
        else
            mx_internal::_TransformToolSample11_StylesInit_done = true;
            
        var style:CSSStyleDeclaration;
        var effects:Array;
                    

        var conditions:Array;
        var condition:CSSCondition;
        var selector:CSSSelector;

        styleManager.initProtoChainRoots();
    }


    //  embed carrier vars
[Embed(source='image3.png')]
 private var _embed_mxml_image3_png_1599624958:Class;

[Embed(source='image1.png')]
 private var _embed_mxml_image1_png_1600662270:Class;

[Embed(source='image2.png')]
 private var _embed_mxml_image2_png_1599613436:Class;

    //  end embed carrier vars

    //  binding management vars
    /**
     * @private
     **/
    mx_internal var _bindings : Array = [];
    /**
     * @private
     **/
    mx_internal var _watchers : Array = [];
    /**
     * @private
     **/
    mx_internal var _bindingsByDestination : Object = {};
    /**
     * @private
     **/
    mx_internal var _bindingsBeginWithWord : Object = {};

//  end class def
}

//  end package def
}
