
/**
 *  Generated by mxmlc 4.0
 *
 *  Package:    modules.imgeditor.view
 *  Class:      ImageEditorView
 *  Source:     D:\a.krasovsky\Dropbox\projects\my\site\NastasiaEditor\src\modules\imgeditor\view\ImageEditorView.mxml
 *  Template:   flex2/compiler/mxml/gen/ClassDef.vm
 *  Time:       2014.01.15 02:25:02 AST
 */

package modules.imgeditor.view
{

import flash.accessibility.*;
import flash.debugger.*;
import flash.display.*;
import flash.errors.*;
import flash.events.*;
import flash.events.Event;
import flash.events.MouseEvent;
import flash.external.*;
import flash.geom.*;
import flash.media.*;
import flash.net.*;
import flash.printing.*;
import flash.profiler.*;
import flash.system.*;
import flash.text.*;
import flash.ui.*;
import flash.utils.*;
import flash.xml.*;
import modules.imgeditor.event.renderer.LayerItemRendererEvent;
import modules.imgeditor.view.components.LayerManagerView;
import modules.imgeditor.view.components.LayersList;
import mx.binding.*;
import mx.binding.IBindingClient;
import mx.core.ClassFactory;
import mx.core.DeferredInstanceFromClass;
import mx.core.DeferredInstanceFromFunction;
import mx.core.IDeferredInstance;
import mx.core.IFactory;
import mx.core.IFlexModuleFactory;
import mx.core.IPropertyChangeNotifier;
import mx.core.mx_internal;
import mx.events.ListEvent;
import mx.filters.*;
import mx.styles.*;
import spark.components.Application;
import spark.components.Button;
import spark.components.Group;
import spark.components.VGroup;



//  begin class def
public class ImageEditorView
    extends spark.components.Application
    implements mx.binding.IBindingClient
{

    //  instance variables
    [Bindable]
	/**
 * @private
 **/
    public var addImageButton : spark.components.Button;

    [Bindable]
	/**
 * @private
 **/
    public var layerList : modules.imgeditor.view.components.LayersList;

    [Bindable]
	/**
 * @private
 **/
    public var layerManagerView : modules.imgeditor.view.components.LayerManagerView;

    [Bindable]
	/**
 * @private
 **/
    public var toolsContainerGroup : spark.components.Group;


    //  type-import dummies



    //  constructor (Flex display object)
    /**
     * @private
     **/
    public function ImageEditorView()
    {
        super();

        mx_internal::_document = this;


        var bindings:Array = _ImageEditorView_bindingsSetup();
        var watchers:Array = [];

        var target:Object = this;

        if (_watcherSetupUtil == null)
        {
            var watcherSetupUtilClass:Object = getDefinitionByName("_modules_imgeditor_view_ImageEditorViewWatcherSetupUtil");
            watcherSetupUtilClass["init"](null);
        }

        _watcherSetupUtil.setup(this,
                    function(propertyName:String):* { return target[propertyName]; },
                    function(propertyName:String):* { return ImageEditorView[propertyName]; },
                    bindings,
                    watchers);

        mx_internal::_bindings = mx_internal::_bindings.concat(bindings);
        mx_internal::_watchers = mx_internal::_watchers.concat(watchers);


        // layer initializers

       
        // properties
        this.mxmlContentFactory = new mx.core.DeferredInstanceFromFunction(_ImageEditorView_Array1_c);


        // events
        this.addEventListener("addedToStage", ___ImageEditorView_Application1_addedToStage);










        for (var i:uint = 0; i < bindings.length; i++)
        {
            Binding(bindings[i]).execute();
        }


    }

    /**
     * @private
     **/ 
    private var __moduleFactoryInitialized:Boolean = false;

    /**
     * @private
     * Override the module factory so we can defer setting style declarations
     * until a module factory is set. Without the correct module factory set
     * the style declaration will end up in the wrong style manager.
     **/ 
    override public function set moduleFactory(factory:IFlexModuleFactory):void
    {
        super.moduleFactory = factory;
        
        if (__moduleFactoryInitialized)
            return;

        __moduleFactoryInitialized = true;


        // our style settings



                         
    }
 
    //  initialize()
    /**
     * @private
     **/
    override public function initialize():void
    {


        super.initialize();
    }


    //  scripts
    //  <Script>, line 38 - 72

        import modules.imgeditor.event.ImageEditorEvent;
        import modules.imgeditor.event.ToolsEvent;
        import modules.imgeditor.event.renderer.LayerItemRendererEvent;
        import modules.imgeditor.model.LayersModel;
        import modules.imgeditor.view.components.BitmapLayerDisplObj;
        import modules.imgeditor.view.components.ILayerDisplObj;

        import mx.events.ListEvent;

        [Dispatcher]
        public var dispatcher:IEventDispatcher;

        [Inject]
        [Bindable]
        public var layersModel:LayersModel;

        private function addImageButton_clickHandler(event:MouseEvent):void {
            dispatcher.dispatchEvent(new ImageEditorEvent(ImageEditorEvent.ADD_IMAGE));
        }

        private function initializeHandler(event:Event):void {
            this.systemManager.stage.scaleMode = StageScaleMode.NO_SCALE;
            this.systemManager.stage.align = StageAlign.TOP_LEFT;
        }

        private function layerList_changeHandler(event:ListEvent):void {

        }

        private function layerList_selectImageHandler(event:LayerItemRendererEvent):void {
            var layer:ILayerDisplObj = layersModel.layers[event.data] as BitmapLayerDisplObj;
            dispatcher.dispatchEvent(new ToolsEvent(ToolsEvent.SELECTION_TOOL, layer));
        }
        

    //  end scripts


    //  supporting function definitions for properties, events, styles, effects
private function _ImageEditorView_Array1_c() : Array
{
	var temp : Array = [_ImageEditorView_LayerManagerView1_i(), _ImageEditorView_VGroup1_c(), _ImageEditorView_LayersList1_i(), _ImageEditorView_Group1_i()];
	return temp;
}

private function _ImageEditorView_LayerManagerView1_i() : modules.imgeditor.view.components.LayerManagerView
{
	var temp : modules.imgeditor.view.components.LayerManagerView = new modules.imgeditor.view.components.LayerManagerView();
	temp.width = 700;
	temp.height = 400;
	temp.id = "layerManagerView";
	if (!temp.document) temp.document = this;
	layerManagerView = temp;
	mx.binding.BindingManager.executeBindings(this, "layerManagerView", layerManagerView);
	return temp;
}

private function _ImageEditorView_VGroup1_c() : spark.components.VGroup
{
	var temp : spark.components.VGroup = new spark.components.VGroup();
	temp.mxmlContent = [_ImageEditorView_Button1_i()];
	if (!temp.document) temp.document = this;
	return temp;
}

private function _ImageEditorView_Button1_i() : spark.components.Button
{
	var temp : spark.components.Button = new spark.components.Button();
	temp.label = "add";
	temp.left = 0;
	temp.top = 0;
	temp.addEventListener("click", __addImageButton_click);
	temp.id = "addImageButton";
	if (!temp.document) temp.document = this;
	addImageButton = temp;
	mx.binding.BindingManager.executeBindings(this, "addImageButton", addImageButton);
	return temp;
}

/**
 * @private
 **/
public function __addImageButton_click(event:flash.events.MouseEvent):void
{
	addImageButton_clickHandler(event)
}

private function _ImageEditorView_LayersList1_i() : modules.imgeditor.view.components.LayersList
{
	var temp : modules.imgeditor.view.components.LayersList = new modules.imgeditor.view.components.LayersList();
	temp.top = 30;
	temp.addEventListener("change", __layerList_change);
	temp.addEventListener("selectImage", __layerList_selectImage);
	temp.id = "layerList";
	if (!temp.document) temp.document = this;
	layerList = temp;
	mx.binding.BindingManager.executeBindings(this, "layerList", layerList);
	return temp;
}

/**
 * @private
 **/
public function __layerList_change(event:mx.events.ListEvent):void
{
	layerList_changeHandler(event)
}

/**
 * @private
 **/
public function __layerList_selectImage(event:modules.imgeditor.event.renderer.LayerItemRendererEvent):void
{
	layerList_selectImageHandler(event)
}

private function _ImageEditorView_Group1_i() : spark.components.Group
{
	var temp : spark.components.Group = new spark.components.Group();
	temp.id = "toolsContainerGroup";
	if (!temp.document) temp.document = this;
	toolsContainerGroup = temp;
	mx.binding.BindingManager.executeBindings(this, "toolsContainerGroup", toolsContainerGroup);
	return temp;
}

/**
 * @private
 **/
public function ___ImageEditorView_Application1_addedToStage(event:flash.events.Event):void
{
	initializeHandler(event)
}


    //  binding mgmt
    private function _ImageEditorView_bindingsSetup():Array
    {
        var result:Array = [];

        result[0] = new mx.binding.Binding(this,
            function():Object
            {

                return (layersModel.layersList);
            },
            null,
            "layerList.dataProvider"
            );


        return result;
    }


    /**
     * @private
     **/
    public static function set watcherSetupUtil(watcherSetupUtil:IWatcherSetupUtil2):void
    {
        (ImageEditorView)._watcherSetupUtil = watcherSetupUtil;
    }

    private static var _watcherSetupUtil:IWatcherSetupUtil2;



    //  embed carrier vars
    //  end embed carrier vars

    //  binding management vars
    /**
     * @private
     **/
    mx_internal var _bindings : Array = [];
    /**
     * @private
     **/
    mx_internal var _watchers : Array = [];
    /**
     * @private
     **/
    mx_internal var _bindingsByDestination : Object = {};
    /**
     * @private
     **/
    mx_internal var _bindingsBeginWithWord : Object = {};

//  end class def
}

//  end package def
}
