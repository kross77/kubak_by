//Generated by Prefab3D 2.143, Tue Jun 4 04:13:04 GMT+0300 2013. www.closier.nl/prefab
package {
import ASBase;
import away3d.containers.ObjectContainer3D;
import away3d.entities.Mesh;
import away3d.core.base.Geometry;
import away3d.materials.MaterialBase;


import away3d.core.base.Geometry;
import away3d.materials.ColorMaterial;

import data.Obj_000002Data;

import flash.display.Bitmap;

import data.Obj_000001Data;

public class Cup extends ASBase {
    function Cup():void {
        super();
        buildMaterials();
        generate();
    }

    private var _mesh:Mesh;

    private function generate():void {
        var cont_rd:Vector.<Number> = Vector.<Number>([1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1]);
        var cont:ObjectContainer3D = buildContainer(cont_rd, "cont", null);

        var obj_000002Data:Obj_000002Data = new Obj_000002Data();
        var geomobj_000002:Geometry = obj_000002Data.geometryData;
        var obj_000002_rd:Vector.<Number> = Vector.<Number>([1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, -328.5476379394531, -391.4177551269531, -33.55894470214844, 1]);

        _mesh = buildMesh(geomobj_000002, obj_000002_rd, "mesh", getMaterialFromID("PorcelainRed"), cont);

        materialMesh = getMaterialFromID("PorcelainRed");
        var obj_000001Data:Obj_000001Data = new Obj_000001Data();
        var geomobj_000001:Geometry = obj_000001Data.geometryData;
        var obj_000001_rd:Vector.<Number> = Vector.<Number>([1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, -328.5476379394531, -391.4177551269531, -33.55894470214844, 1]);
        var obj_000001:Mesh = buildMesh(geomobj_000001, obj_000001_rd, "obj_000001", getMaterialFromID("PorcelainWhite"), cont);

        obj_000001.subMeshes[0].material = getMaterialFromID("PorcelainWhite");
    }

    public function set materialMesh(materialMesh:MaterialBase):void {
        _mesh.subMeshes[0].material = materialMesh;
    }

    public function get materialMesh():MaterialBase {
        return    _mesh.subMeshes[0].material;
    }

    private function buildMaterials():void {
        var material:MaterialBase;


        material = generateMaterial("PorcelainRed", 0x822323);
        ColorMaterial(material).alpha = 1;
        ColorMaterial(material).ambientColor = 0x822323;

        material = generateMaterial("PorcelainWhite", 0xEDEDED);
        ColorMaterial(material).alpha = 1;
        ColorMaterial(material).ambientColor = 0x0;
        ColorMaterial(material).specularColor = 0xCCCCCC;
    }

}
}