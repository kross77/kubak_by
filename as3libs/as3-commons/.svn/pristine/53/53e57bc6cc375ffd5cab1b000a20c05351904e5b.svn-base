<?xml version="1.0" encoding="UTF-8"?>
<document>
    <properties>
        <title>Welcome to as3commons-reflect</title>
        <author email="scab@dds.nl">Roland Zwaga</author>
    </properties>
    <body>
        <section name="Welcome to as3-commons-bytecode">
            
            <div id="downloadbox">
                <h5>Get latest stable</h5>
                <p>
                    <a href="http://projects.yoolab.org/maven/content/repositories/releases/org/as3commons/as3commons-bytecode/0.8.1/as3commons-bytecode-0.8.1.swc">
                        <img valign="top" src="images/folder-open.gif" border="0" alt="Download latest stable" title="download"/>
                        Download
                    </a>
                    latest stable (0.8.1)
                </p>
                <br/>
                <h5>Get lastest development snapshot</h5>
                <p>
                    <a href="downloads/as3commons-bytecode-latest-snapshot-bin.zip">
                        <img valign="top" src="images/folder-open.gif" border="0" alt="Download latest stable" title="download"/>
                        Download
                    </a>
                    latest snapshot
                </p>
            </div>


            <p>
                AS3Commons-bytecode is an open-source library providing a ABC bytecode parsing and publishing and bytecode based reflection API for ActionScript 3.0.
                Being a pure actionscript library it can be used for any Flash/Flex/AIR project.
            </p>
            
            <p>
            	This project used to be known as Loom as created by Maxim Porges. (<a href="http://code.google.com/p/loom-as3/">http://code.google.com/p/loom-as3/</a>)
            </p>

            <p>
            	The library provides clean, easy and complete introspection on class variables,
            	accessors, methods, metadata and more, by parsing the bytecode returned by 
            	<code>loaderInfo.bytes</code>. By parsing the bytecode directly it is possible to
            	gain complete class insight, which means private members and methods, default values
            	for optional parameters, etc. 
            	Parsing results are cached so that possibly resource expensive parsing won't occur next time for the same class.
            </p>
            
        </section>

    </body>
</document>

